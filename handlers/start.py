from aiogram import Router, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from keyboards.main_menu_kb import main_menu_kb
from utils.database import get_user
# from aiogram.types.input_file import FSInputFile


router = Router()

@router.message(Command("start"))
async def start_handler(message: types.Message):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="–°—Ç–∞—Ä—Ç üöÄ")]],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    user_data = await get_user(message.from_user.id)
    is_registered = user_data is not None

    if is_registered:
        first_name = user_data.get("name", "").split()[0] if user_data.get("name") else ""
        text = (
            f"–†–∞–¥–∏–π –∑–Ω–æ–≤—É —Ç–µ–±–µ –±–∞—á–∏—Ç–∏, {first_name}! üëã\n"
            "–ó–∞—Ä–∞–∑ –Ω–∞ –ø–∞–Ω–µ–ª—ñ —Ç–∏ –±–∞—á–∏—à —Ä–æ–∑–¥—ñ–ª–∏ ‚Äì —Ç–∏—Å–Ω–∏ –Ω–∞ –Ω–∏—Ö, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—å –±—ñ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π –ø—Ä–æ –∫–æ–∂–µ–Ω –±–ª–æ–∫ üîé."
        )
        await message.answer(
            text=text,
            reply_markup=main_menu_kb(),
            parse_mode="HTML"
        )
    else:
        await message.answer(
            text=(
                "–ü—Ä–∏–≤—ñ—Ç!\n"
                "–Ø ‚Äì –±–æ—Ç –Ü–Ω–∂–µ–Ω–µ—Ä–Ω–æ–≥–æ –Ø—Ä–º–∞—Ä–∫—É –ö–∞—Ä‚Äô—î—Ä–∏ –π –¥–æ–ø–æ–º–æ–∂—É —Ç–æ–±—ñ –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –ø—Ä–æ –≤—Å—ñ –Ω–∞—à—ñ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ, —Å–ø—ñ–∫–µ—Ä—ñ–≤, –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ –Ω–∞–≤—ñ—Ç—å —Å—Ç–≤–æ—Ä–∏—Ç–∏ –°V.\n"
                "–©–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏ –Ω–∞—à–µ –∑–Ω–∞–π–æ–º—Å—Ç–≤–æ –Ω–∞—Ç–∏—Å–Ω–∏ ¬´–°—Ç–∞—Ä—Ç üöÄ¬ª!"
            ),
            reply_markup=keyboard,
            parse_mode="HTML"
        )