from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from motor.motor_asyncio import AsyncIOMotorDatabase
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State

router = Router()

class FeedbackStates(StatesGroup):
    waiting_for_comment = State()

def rating_keyboard():
    keyboard = [
        [InlineKeyboardButton(text=f"{i} ‚≠ê", callback_data=f"rate_{i}")] for i in range(1, 6)
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

@router.message(F.text == "–ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫")
async def ask_rating(message: Message):
    await message.answer(
        "–û—Ü—ñ–Ω–∏, –±—É–¥—å –ª–∞—Å–∫–∞, –ø–æ–¥—ñ—é –≤—ñ–¥ 1 –¥–æ 5 ‚≠êÔ∏è",
        reply_markup=rating_keyboard()
    )

@router.callback_query(F.data.startswith("rate_"))
async def handle_rating(callback: CallbackQuery, state: FSMContext, db: AsyncIOMotorDatabase):
    user_id = callback.from_user.id
    rating = int(callback.data.split("_")[1])

    await state.update_data(rating=rating)

    await callback.message.edit_text(f"–¢–≤–æ—è –æ—Ü—ñ–Ω–∫–∞: {rating} ‚≠êÔ∏è\n–¢–µ–ø–µ—Ä –Ω–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–∏–π –≤—ñ–¥–≥—É–∫ ‚úçÔ∏è")
    await state.set_state(FeedbackStates.waiting_for_comment)


@router.message(FeedbackStates.waiting_for_comment)
async def save_feedback(message: Message, state: FSMContext, db: AsyncIOMotorDatabase):
    user_id = message.from_user.id
    comment = message.text

    data = await state.get_data()
    rating = data.get('rating')

    feedback_collection = db["feedback"]
    await feedback_collection.update_one(
        {"telegram_id": user_id},
        {"$set": {
            "rating": rating,
            "comment": comment
        }},
        upsert=True
    )

    await message.answer("–î—è–∫—É—î–º–æ –∑–∞ –¥–µ—Ç–∞–ª—å–Ω–∏–π –≤—ñ–¥–≥—É–∫! üíôüíõ")
    await state.clear()
